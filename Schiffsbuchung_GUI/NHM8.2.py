# Form implementation generated from reading ui file 'NeuesHauptmenu5.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon, QStandardItemModel
from PyQt5.QtWidgets import QApplication, QComboBox, QMainWindow, QWidget, QVBoxLayout
from PyQt5.QtCore import Qt

class CheckableComboBox(QComboBox):
    def __init__(self):
        super(CheckableComboBox, self).__init__()
        self.view().pressed.connect(self.handle_item_pressed)
        self.setModel(QStandardItemModel(self))

    #when any item gets pressed
    def handle_item_pressed(self, index):
        # getting which item is pressed
        item = self.model().itemFromIndex(index)
        # make it check if unchecked and vice-versa
        if item.checkState() == Qt.Checked:
            item.checkState(Qt.Unchecked)
        else:
            item.checkState(Qt.Checked)
        # calling method
        self.check_item()

    # method called by check_item()
    def item_checked(self, index):
        # getting item at(/as?) index
        item = self.model().item(index, 0)
        # return true if checked else false
        return item.checkState() == Qt.Checked

    # calling method
    def check_items(self):
        # blank list
        checkedItems = []
        #traversing the items
        for i in range(self.count()):
            # if item is checked add it to the list
            if self.item_checked(i):
                checkedItems.append(i)

        # call this method
        self.update_labels(checkedItems)

        # method to update the label
        def update_labels(self, item_list):

            n = ''
            count = 0

            # traversing the list
            for i in item_list:

                # if count value is 0 don't add comma
                if count == 0:
                    n += ' % s' % i
                # else value is greater then 0
                # add comma
                else:
                    n += ', % s' % i

                # increment count
                count += 1

            # loop
            for i in range(self.count()):

                # getting label
                text_label = self.model().item(i, 0).text()

                # default state
                if text_label.find('-') >= 0:
                    text_label = text_label.split('-')[0]

                # shows the selected items
                item_new_text_label = text_label + ' - selected index: ' + n

                # setting text to combo box
                self.setItemText(i, item_new_text_label)

        # flush
        sys.stdout.flush()





class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        super(object, self).__init__()

        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(802, 606)
        MainWindow.setWindowIcon(QIcon("Schifficon.png"))
        MainWindow.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QMainWindow{background-image: url(Bilder/Cruise Background 3.jpg) 0 0 0 0 stretch stretch;}")
        MainWindow.setIconSize(QtCore.QSize(24, 24))
        MainWindow.setAnimated(True)
        MainWindow.setDocumentMode(False)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")


        ####++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        ####++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        # creating a widget object
        #myQWidget = QWidget()

        # vertical box layout
        #myBoxLayout = QVBoxLayout()
        #myQWidget.setLayout(myBoxLayout)

        # central widget
        #self.centralwidget(myQWidget)

        # creating checkable combo box
        self.CBStadt = CheckableComboBox()

        # traversing items
        for i in range(3):
            # adding item
            self.CBNeuereStadt.addItem("Combobox Item " + str(i))
            self.CBNeuereStadt.addItem("Stadt")
            # self.CBStadt.addItem("Aberdeen", "Nordsee")
            # self.CBStadt.addItem("Algier")
            # self.CBStadt.addItem("Amsterdam")
            # self.CBStadt.addItem("Athen")
            # self.CBStadt.addItem("Barcelona")
            # self.CBStadt.addItem("Bari")
            # self.CBStadt.addItem("Bergen")
            # self.CBStadt.addItem("Cagliari")
            # self.CBStadt.addItem("Catania")
            # self.StadtComboBox.addItem("Danzig")
            # self.StadtComboBox.addItem("Den Haag")
            # self.StadtComboBox.addItem("Edinburg")
            # self.StadtComboBox.addItem("Genua")
            # self.StadtComboBox.addItem("Gibraltar")
            # self.StadtComboBox.addItem("Göteborg")
            # self.StadtComboBox.addItem("Haugesund")
            # self.StadtComboBox.addItem("Helsinki")
            # self.StadtComboBox.addItem("Kaliningrad")
            # self.StadtComboBox.addItem("Kleipeda")
            # self.StadtComboBox.addItem("Kopenhagen")
            # self.StadtComboBox.addItem("Kristiansand")
            # self.StadtComboBox.addItem("Malaga")
            # self.StadtComboBox.addItem("Marseille")
            # self.StadtComboBox.addItem("Neapel")
            # self.StadtComboBox.addItem("Palermo")
            # self.StadtComboBox.addItem("Riga")
            # self.StadtComboBox.addItem("Reykjavik")
            # self.StadtComboBox.addItem("Sankt Petersburg")
            # self.StadtComboBox.addItem("Split")
            # self.StadtComboBox.addItem("Stockholm")
            # self.StadtComboBox.addItem("Stralsund")
            # self.StadtComboBox.addItem("Tallin")
            # self.StadtComboBox.addItem("Tanger")
            # self.StadtComboBox.addItem("Torshavn")
            # self.StadtComboBox.addItem("Tromsö")
            # self.StadtComboBox.addItem("Trondheim")
            # self.StadtComboBox.addItem("Tunis")
            # self.StadtComboBox.addItem("Valencia")
            # self.StadtComboBox.addItem("Valetta")
            # self.StadtComboBox.addItem("Venedig")
            # self.StadtComboBox.addItem("Visby")
            # self.StadtComboBox.addItem("Ystad")
            item = self.CBStadt.model().item(i, 0)

            # setting item unchecked
            item.setCheckState(Qt.Unchecked)

        # adding combo box to the layout
        #myBoxLayout.addWidget(self.CheckComboBox)

        ####++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        ####++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        self.CBOrt = QtWidgets.QComboBox(self.centralwidget)
        self.CBOrt.setGeometry(QtCore.QRect(10, 20, 181, 41))
        # self.CBOrt.setStyleSheet("CBOrt{background-color: white;}")
        self.CBOrt.setObjectName("CBOrt")
        self.CBOrt.addItem("")
        self.CBOrt.addItem("")
        self.CBOrt.addItem("")
        self.CBOrt.addItem("")

        # ---- Staedte Auswahl - ComboBox ---- #
        self.CBStadt = QtWidgets.QComboBox(self.centralwidget)
        self.CBStadt.setGeometry(QtCore.QRect(310, 70, 200, 41))
        self.CBStadt.setObjectName("CBStadt")
        #~~~~~~~~~~~~~~~~~~~~ Ausklappbare CheckBox Test ~~~~~~~~~~~~~~~~~~~~#



        #self.ui.comboBox.setModel(model)
        #self.ui.comboBox.installEventFilter(self)
        #~~~~~~~~~~~~~~~~~~~~ Ausklappbare CheckBox Test ~~~~~~~~~~~~~~~~~~~~#
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")
        # self.CBStadt.addItem("")

        self.SearchButton = QtWidgets.QPushButton(self.centralwidget)
        self.SearchButton.setGeometry(QtCore.QRect(730, 20, 61, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.SearchButton.setFont(font)
        self.SearchButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.SearchButton.setMouseTracking(False)
        self.SearchButton.setStyleSheet("background-color: rgb(70, 206, 60);\n" "color: white;")
        self.SearchButton.setAutoRepeat(False)
        self.SearchButton.setObjectName("SearchButton")

        self.UbernachtungenSB = QtWidgets.QSpinBox(self.centralwidget)
        self.UbernachtungenSB.setGeometry(QtCore.QRect(200, 20, 100, 41))
        self.UbernachtungenSB.setStyleSheet("UbernachtungenSB{background-color: white;}")
        self.UbernachtungenSB.setMinimum(7)
        self.UbernachtungenSB.setMaximum(21)
        self.UbernachtungenSB.setProperty("value", 7)
        self.UbernachtungenSB.setObjectName("UbernachtungenSB")

        self.CBSchiffsTyp = QtWidgets.QComboBox(self.centralwidget)
        self.CBSchiffsTyp.setGeometry(QtCore.QRect(520, 20, 200, 41))
        self.CBSchiffsTyp.setStyleSheet("CBPersonen{background-color: white;}")
        self.CBSchiffsTyp.setObjectName("CBSchiffsTyp")
        self.CBSchiffsTyp.addItem("")
        self.CBSchiffsTyp.addItem("")
        self.CBSchiffsTyp.addItem("")
        self.CBSchiffsTyp.addItem("")
        self.CBSchiffsTyp.addItem("")
        self.CBSchiffsTyp.addItem("")
        self.CBSchiffsTyp.addItem("")

        # -- Staedte Auswahl - Toolbutton --#
        self.toolButtonStadt = QtWidgets.QToolButton(self.centralwidget) #1
        self.toolButtonStadt.setGeometry(QtCore.QRect(310, 20, 200, 41))    # Größe und
        self.toolButtonStadt.setObjectName("toolButtonStadt")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        #~~~~~~~~~~~~~~~~~~~~~~
        # staedte = ["Barcelona", "Athen", "Bergen", "Ysta"]
        # model = QtGui.QStandardItemModel(20, 1) # 5 rows, 1 colummn
        # firstItem = QtGui.QStandardItem("----Staedte Auswaehlen----")
        # firstItem.setBackground(QtGui.QBrush(QtGui.QColor(200, 200, 200)))
        # firstItem.setSelectable(False)  # Erstes Item aus der Auswahl entfernen
        # for i, area in enumerate(staedte):
        #     item = QtGui.QStandardItem(area)
        #     item.setFlags(QtCore.Qt.ItemIsUserCheckable | QtCore.Qt.ItemIsEnabled)
        #     item.setData(QtCore.Qt.Unchecked, QtCore.Qt.CheckStateRole)
        #     model.setItem(i+1, 0, item)
        #~~~~~~~~~~~~~~~~~~~~
        #self.toolmenu = QtWidgets.QMenu(self)
        #self.toolButtonStadt.setMenu(self.toolmenu)
        self.toolButtonStadt.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)

        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.CBOrt.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.CBOrt.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.CBOrt.setItemText(0, _translate("MainWindow", "Region", "True"))
        self.CBOrt.setItemText(1, _translate("MainWindow", "Ostsee"))
        self.CBOrt.setItemText(2, _translate("MainWindow", "Nordsee"))
        self.CBOrt.setItemText(3, _translate("MainWindow", "Mittelmeer"))

        # self.CBStadt.setItemText(0, _translate("MainWindow", "Stadt"))
        # self.CBStadt.setItemText(1, _translate("MainWindow", "Aberdeen"))
        # self.CBStadt.setItemText(2, _translate("MainWindow", "Algier"))
        # self.CBStadt.setItemText(3, _translate("MainWindow", "Amsterdam"))
        # self.CBStadt.setItemText(4, _translate("MainWindow", "Athen"))
        # self.CBStadt.setItemText(5, _translate("MainWindow", "Barcelona"))
        # self.CBStadt.setItemText(6, _translate("MainWindow", "Bari"))
        # self.CBStadt.setItemText(7, _translate("MainWindow", "Bergen"))
        # self.CBStadt.setItemText(8, _translate("MainWindow", "Cagliari"))
        # self.CBStadt.setItemText(9, _translate("MainWindow", "Catania"))
        # self.CBStadt.setItemText(10, _translate("MainWindow", "Danzig"))
        # self.CBStadt.setItemText(11, _translate("MainWindow", "Den Haag"))
        # self.CBStadt.setItemText(12, _translate("MainWindow", "Edinburg"))
        # self.CBStadt.setItemText(13, _translate("MainWindow", "Genua"))
        # self.CBStadt.setItemText(14, _translate("MainWindow", "Gibraltar"))
        # self.CBStadt.setItemText(15, _translate("MainWindow", "Göteborg"))
        # self.CBStadt.setItemText(16, _translate("MainWindow", "Haugesund"))
        # self.CBStadt.setItemText(17, _translate("MainWindow", "Helsinki"))
        # self.CBStadt.setItemText(18, _translate("MainWindow", "Kaliningrad"))
        # self.CBStadt.setItemText(19, _translate("MainWindow", "Kleipeda"))
        # self.CBStadt.setItemText(20, _translate("MainWindow", "Kopenhagen"))
        # self.CBStadt.setItemText(21, _translate("MainWindow", "Kristiansand"))
        # self.CBStadt.setItemText(22, _translate("MainWindow", "Malaga"))
        # self.CBStadt.setItemText(23, _translate("MainWindow", "Marseille"))
        # self.CBStadt.setItemText(24, _translate("MainWindow", "Neapel"))
        # self.CBStadt.setItemText(25, _translate("MainWindow", "Palermo"))
        # self.CBStadt.setItemText(26, _translate("MainWindow", "Riga"))
        # self.CBStadt.setItemText(27, _translate("MainWindow", "Reykjavik"))
        # self.CBStadt.setItemText(28, _translate("MainWindow", "Sankt Petersburg"))
        # self.CBStadt.setItemText(29, _translate("MainWindow", "Split"))
        # self.CBStadt.setItemText(30, _translate("MainWindow", "Stockholm"))
        # self.CBStadt.setItemText(31, _translate("MainWindow", "Stralsund"))
        # self.CBStadt.setItemText(32, _translate("MainWindow", "Tallin"))
        # self.CBStadt.setItemText(33, _translate("MainWindow", "Tanger"))
        # self.CBStadt.setItemText(34, _translate("MainWindow", "Torshavn"))
        # self.CBStadt.setItemText(35, _translate("MainWindow", "Tromsö"))
        # self.CBStadt.setItemText(36, _translate("MainWindow", "Trondheim"))
        # self.CBStadt.setItemText(37, _translate("MainWindow", "Tunis"))
        # self.CBStadt.setItemText(38, _translate("MainWindow", "Valencia"))
        # self.CBStadt.setItemText(39, _translate("MainWindow", "Valetta"))
        # self.CBStadt.setItemText(40, _translate("MainWindow", "Venedig"))
        # self.CBStadt.setItemText(41, _translate("MainWindow", "Visby"))
        # self.CBStadt.setItemText(42, _translate("MainWindow", "Ystad"))

        self.SearchButton.setText(_translate("MainWindow", "Search"))

        self.CBSchiffsTyp.setItemText(0, _translate("MainWindow", "Schiffstyp"))
        self.CBSchiffsTyp.setItemText(1, _translate("MainWindow", "A"))
        self.CBSchiffsTyp.setItemText(2, _translate("MainWindow", "B"))
        self.CBSchiffsTyp.setItemText(3, _translate("MainWindow", "C"))
        self.CBSchiffsTyp.setItemText(4, _translate("MainWindow", "D"))
        self.CBSchiffsTyp.setItemText(5, _translate("MainWindow", "E"))
        self.CBSchiffsTyp.setItemText(6, _translate("MainWindow", "F"))

        self.toolButtonStadt.setText(_translate("MainWindow", "NeuStadt"))  #


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
